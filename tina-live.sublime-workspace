{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"stop",
				"stop_websocket"
			],
			[
				"st",
				"start_websocket"
			],
			[
				"ap",
				"api_functions"
			],
			[
				"que",
				"queue_name"
			],
			[
				"tra",
				"tradeable"
			],
			[
				"for",
				"format_input"
			],
			[
				"fea",
				"feature_range"
			],
			[
				"win",
				"window"
			],
			[
				"opti",
				"optimizer"
			],
			[
				"cla",
				"classifiers"
			],
			[
				"to",
				"to_csv"
			],
			[
				"K",
				"KNeighborsClassifier"
			],
			[
				"lst",
				"lstm_classifier"
			],
			[
				"den",
				"dense_classifier"
			],
			[
				"crea",
				"create_model"
			],
			[
				"test",
				"test_data"
			]
		]
	},
	"buffers":
	[
		{
			"file": "single_asset.py",
			"settings":
			{
				"buffer_size": 12624,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "context.py",
			"settings":
			{
				"buffer_size": 1954,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'''\nsignal_bar.py\n\n@version: 1.0\n\nSends message when at new bar/candle\n\n@author: Glenn Kroegel\n@contact: glenn.kroegel@gmail.com\n\nCHANGE LOG - None \n\n'''\n\nimport socket\nimport hashlib\nimport cgi\nimport time\nimport json\nimport pika\nimport datetime as dt\nimport ast\nimport websocket\nimport pandas as pd\nimport numpy as np\nimport ssl\nfrom StringIO import StringIO\nfrom api_functions import *\nimport sys\nimport logging\nfrom sklearn.externals import joblib\n\n# CUSTOM IMPORTS\n\n#from Functions import *\nfrom calculations import *\n\n# Message queue\nprint('Opening message queue...')\nconnection = pika.BlockingConnection(pika.ConnectionParameters('localhost'))\nchannel = connection.channel()\nchannel.exchange_declare(exchange = 'bars', type = 'fanout')\n\ndef on_open(ws):\n\n\tprint(\"Server connected\")\n\tlogging.info(\"Server connected\")\n\tauthorize(ws)\n\ttick_stream(ws)\n\ndef on_message(ws, message):\n\n\tres = json.loads(message.decode('utf8'))\n\tmsg_type = res['msg_type']\n\n\tif(msg_type == 'tick'):\n\t\tepoch_tick = res['tick']['epoch']\n\t\tdt_tick = dt.datetime.utcfromtimestamp(int(epoch_tick))\n\t\tif (dt_tick.second == 0):\n\t\t\tmessage = 'candle event'\n\t\t\tchannel.basic_publish(exchange='bars',routing_key='',body=message)\n\t\t\tprint(\" [x] Sent candle event\")\n\telse:\n\t\tprint res\n\ndef on_close(ws):\n\n\tprint(\"Websocket connection closed\")\n\tlogging.info(\"Connection closed\")\n\ndef main():\n\n\t#######################################################\n\n\t# LOG FILE\n\n\tlogging.basicConfig(filename = 'BAR.log', format = \"%(asctime)s; %(message)s\", datefmt = \"%Y-%m-%d %H:%M:%S\", level = logging.DEBUG)\n\n\t#######################################################\n\n\tprint('Starting websocket..')\n\n\twebsocket.enableTrace(False)\n\tapiURL = \"wss://ws.binaryws.com/websockets/v3?app_id=2802\" # hard coded app_id\n\tws = websocket.WebSocketApp(apiURL, on_message = on_message, on_close = on_close)\n\tws.on_open = on_open\n\tws.run_forever(sslopt={\"ssl_version\": ssl.PROTOCOL_TLSv1_1})\n\n\nif __name__ == \"__main__\":\n\n  try:\n\n    main()\n\n  except KeyboardInterrupt:\n\n    print('Interupted...Exiting...')",
			"file": "signal_bar.py",
			"file_size": 2051,
			"file_write_time": 131366919520050394,
			"settings":
			{
				"buffer_size": 2051,
				"line_ending": "Unix"
			}
		},
		{
			"file": "receiver.py",
			"settings":
			{
				"buffer_size": 2988,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "threaded_receiver.py",
			"settings":
			{
				"buffer_size": 2941,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "api_functions.py",
			"settings":
			{
				"buffer_size": 1901,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/glenn/projects/tina/backtest2.py",
		"/home/glenn/projects/tina/blend_trial.py"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"asset",
			"45"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "single_asset.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12624,
						"regions":
						{
						},
						"selection":
						[
							[
								7902,
								7902
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5205.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "context.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1954,
						"regions":
						{
						},
						"selection":
						[
							[
								1954,
								1954
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 602.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "signal_bar.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2051,
						"regions":
						{
						},
						"selection":
						[
							[
								1567,
								1567
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1183.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "receiver.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2988,
						"regions":
						{
						},
						"selection":
						[
							[
								932,
								932
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 836.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "threaded_receiver.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2941,
						"regions":
						{
						},
						"selection":
						[
							[
								1918,
								1918
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 836.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "api_functions.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1901,
						"regions":
						{
						},
						"selection":
						[
							[
								1430,
								1430
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 692.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "tina-live.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
